package Main;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author flescano
 */
public class Conversor extends javax.swing.JFrame {

    /**
     * Creates new form Conversor
     */
    public Conversor() {
        initComponents();
        setTitle("Mi conversor de distancias");
        setLocationRelativeTo(null);
        
        converter = new ConverterController();
        
        for (String unit : converter.getUnits()) {
            jComboBoxUpperUnit.addItem(unit);
            jComboBoxDownUnit.addItem(unit);
        }
        
        converter.setOriginUnit(jComboBoxUpperUnit.getSelectedItem().toString());
        converter.setFinalUnit(jComboBoxDownUnit.getSelectedItem().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upperField = new javax.swing.JTextField();
        jButtonConvertir = new javax.swing.JButton();
        downField = new javax.swing.JTextField();
        errorText = new javax.swing.JLabel();
        jComboBoxUpperUnit = new javax.swing.JComboBox<>();
        jComboBoxDownUnit = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        upperField.setText("0.00");
        upperField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                upperFieldFocusGained(evt);
            }
        });
        upperField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                upperFieldKeyReleased(evt);
            }
        });

        jButtonConvertir.setText("Convertir");
        jButtonConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertirActionPerformed(evt);
            }
        });

        downField.setText("0.00");
        downField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                downFieldFocusGained(evt);
            }
        });
        downField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                downFieldKeyReleased(evt);
            }
        });

        errorText.setForeground(new java.awt.Color(255, 0, 0));

        jComboBoxUpperUnit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxUpperUnitItemStateChanged(evt);
            }
        });

        jComboBoxDownUnit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDownUnitItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(errorText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxUpperUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDownUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(downField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upperField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upperField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUpperUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(downField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDownUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonConvertir)
                .addGap(67, 67, 67)
                .addComponent(errorText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertirActionPerformed
        convert();
    }//GEN-LAST:event_jButtonConvertirActionPerformed

    private void convert() {
        errorText.setText("");
        Double input = 0D;
        Boolean error = false;
        javax.swing.JTextField origin = upperField;
        javax.swing.JTextField dest = downField;
        
        if(!usingUpperField) {
            origin = downField;
            dest = upperField;
        }
        
        try {
            input = getDoubleFromString(origin.getText());
        } catch (NumberFormatException e) {
            errorText.setText("El valor ingresado parece no ser un numero");
            JOptionPane.showMessageDialog(this, "El valor ingresado parece no ser un numero", "ERROR", JOptionPane.ERROR_MESSAGE);
            error = true;
        }        
        
        if (!error) {
           dest.setText(String.format("%.2f", converter.convert(input))); 
        }
    }
    
    private Double getDoubleFromString(String value) {
        String fieldText = value.trim().replace(',','.');
        if (fieldText.length() < 1) {
            throw new NumberFormatException("No ingeso ningun numero");
        }
        
        if (!Character.isDigit(fieldText.charAt(fieldText.length() -1))) {
            throw new NumberFormatException("Contiene valores no permitidos");
        }
        
        return Double.valueOf(fieldText);
    }
    
    private void upperFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_upperFieldKeyReleased
        this.cleanField(downField);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            convert();
        }
    }//GEN-LAST:event_upperFieldKeyReleased

    private void cleanField(javax.swing.JTextField field) {
        field.setText("");
    }
    
    private void jComboBoxUpperUnitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxUpperUnitItemStateChanged
       if(usingUpperField) {
           converter.setOriginUnit(evt.getItem().toString());
       } else {
           converter.setFinalUnit(evt.getItem().toString());
       }
    }//GEN-LAST:event_jComboBoxUpperUnitItemStateChanged

    private void jComboBoxDownUnitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDownUnitItemStateChanged
        if(!usingUpperField) {
           converter.setOriginUnit(evt.getItem().toString());
       } else {
           converter.setFinalUnit(evt.getItem().toString());
       }
    }//GEN-LAST:event_jComboBoxDownUnitItemStateChanged

    private void downFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_downFieldKeyReleased
        this.cleanField(upperField);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            convert();
        }
    }//GEN-LAST:event_downFieldKeyReleased

    private void upperFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_upperFieldFocusGained
        if (!usingUpperField) {
            converter.toggle();
            usingUpperField = true;
        }
    }//GEN-LAST:event_upperFieldFocusGained

    private void downFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_downFieldFocusGained
        if (usingUpperField) {
            converter.toggle();
            usingUpperField = false;
        }
    }//GEN-LAST:event_downFieldFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField downField;
    private javax.swing.JLabel errorText;
    private javax.swing.JButton jButtonConvertir;
    private javax.swing.JComboBox<String> jComboBoxDownUnit;
    private javax.swing.JComboBox<String> jComboBoxUpperUnit;
    private javax.swing.JTextField upperField;
    // End of variables declaration//GEN-END:variables

    
    private Boolean usingUpperField = true;
    private ConverterController converter;
}
